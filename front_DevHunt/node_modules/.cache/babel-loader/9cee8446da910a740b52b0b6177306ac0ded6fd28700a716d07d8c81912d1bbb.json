{"ast":null,"code":"// import L from 'leaflet';\nexport default {\n  data() {\n    return {\n      loading: true,\n      error: null,\n      position: null\n    };\n  },\n  mounted() {\n    this.getPosition(), this.position();\n    // this.initMap()\n  },\n  methods: {\n    getPosition() {\n      // Vérifier si le navigateur prend en charge la géolocalisation\n      if (navigator.geolocation) {\n        // Demander la position actuelle de l'utilisateur\n        navigator.geolocation.getCurrentPosition(position => {\n          // Récupérer les coordonnées de la position\n          this.position = {\n            latitude: position.coords.latitude,\n            longitude: position.coords.longitude\n          };\n          this.loading = false;\n        }, error => {\n          // En cas d'erreur lors de la récupération de la position\n          this.error = \"Erreur de géolocalisation : \" + error.message;\n          this.loading = false;\n        });\n      } else {\n        // Le navigateur ne prend pas en charge la géolocalisation\n        this.error = \"La géolocalisation n'est pas prise en charge par ce navigateur.\";\n        this.loading = false;\n      }\n    },\n    // initMap() {\n    //   // Créer la carte Leaflet avec une vue centrée sur votre position\n    //   const map = L.map('map').setView([0, 0], 13);\n\n    //   // Ajouter une couche de carte (par exemple, OpenStreetMap)\n    //   L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n    //     attribution: '© OpenStreetMap contributors',\n    //   }).addTo(map);\n\n    //   // Récupérer la position actuelle de l'utilisateur\n    //   navigator.geolocation.getCurrentPosition(\n    //     (position) => {\n    //       const { latitude, longitude } = position.coords;\n\n    //       // Créer un marqueur pour la position actuelle\n    //       const marker = L.marker([latitude, longitude]).addTo(map);\n\n    //       // Ajouter un popup au marqueur pour afficher des informations supplémentaires\n    //       marker.bindPopup('Votre position actuelle').openPopup();\n\n    //       // Centrer la carte sur la position de l'utilisateur\n    //       map.setView([latitude, longitude], 13);\n    //     },\n    //     (error) => {\n    //       console.error('Erreur de géolocalisation : ', error.message);\n    //     }\n    //   );\n    // },\n\n    Position() {\n      var mapView = new ol.View({\n        center: ol.proj.fromLonLat([this.position.latitude, this.position.longitude]),\n        zoom: 20\n      });\n      var map = new ol.Map({\n        target: 'map',\n        view: mapView\n      });\n      var osmTile = new ol.layer.Tile({\n        title: 'OpenStreetMap',\n        visible: true,\n        source: new ol.source.OSM()\n      });\n      map.addLayer(osmTile);\n      var AmericaStTile = new ol.layer.Tile({\n        title: \"Madagascar\",\n        source: new ol.source.TileWMS({\n          url: 'http://localhost:8080/geoserver/carte/wms',\n          params: {\n            'LAYERS': 'carte:Madagascar',\n            'TILED': true\n          },\n          serverType: 'geoserver',\n          visible: true\n        })\n      });\n      map.addLayer(AmericaStTile);\n      var layerSwitcher = new ol.control.LayerSwitcher({\n        activationMode: 'click',\n        startActive: false,\n        groupSelectStyle: 'children'\n      });\n      map.addControl(layerSwitcher);\n    }\n  }\n};","map":{"version":3,"names":["data","loading","error","position","mounted","getPosition","methods","navigator","geolocation","getCurrentPosition","latitude","coords","longitude","message","Position","mapView","ol","View","center","proj","fromLonLat","zoom","map","Map","target","view","osmTile","layer","Tile","title","visible","source","OSM","addLayer","AmericaStTile","TileWMS","url","params","serverType","layerSwitcher","control","LayerSwitcher","activationMode","startActive","groupSelectStyle","addControl"],"sources":["src/views/MappingView.vue"],"sourcesContent":["<template>\n    <div>\n        <h1>Position Géographique Actuelle</h1>\n        <p v-if=\"loading\">Récupération de la position en cours...</p>\n        <p v-if=\"error\">{{ error }}</p>\n        <p v-if=\"position\">\n            Latitude: {{ position.latitude }}<br>\n            Longitude: {{ position.longitude }}\n        </p>\n        <div id=\"map\"></div>\n    </div>\n</template>\n\n<script src=\"https://cdn.jsdelivr.net/npm/vue@2\"></script>\n<script src=\"../assets/resources/ol/ol.js\"></script>\n<script src=\"../assetsresources/ol-layerswitcher.js\"></script>\n\n<script>\n// import L from 'leaflet';\nexport default{\n    data(){\n        return {\n            loading: true,\n            error: null,\n            position: null\n        }\n    },\n    mounted(){\n        this.getPosition(),\n        this.position()\n        // this.initMap()\n    },\n    methods : {\n        getPosition(){\n            // Vérifier si le navigateur prend en charge la géolocalisation\n            if (navigator.geolocation) {\n                // Demander la position actuelle de l'utilisateur\n                navigator.geolocation.getCurrentPosition(\n                    (position) => {\n                        // Récupérer les coordonnées de la position\n                        this.position = {\n                            latitude: position.coords.latitude,\n                            longitude: position.coords.longitude\n                        };\n                        this.loading = false;\n                    },\n                    (error) => {\n                        // En cas d'erreur lors de la récupération de la position\n                        this.error = \"Erreur de géolocalisation : \" + error.message;\n                        this.loading = false;\n                    }\n                );\n            } else {\n                // Le navigateur ne prend pas en charge la géolocalisation\n                this.error = \"La géolocalisation n'est pas prise en charge par ce navigateur.\";\n                this.loading = false;\n            }\n        },\n        // initMap() {\n        //   // Créer la carte Leaflet avec une vue centrée sur votre position\n        //   const map = L.map('map').setView([0, 0], 13);\n            \n        //   // Ajouter une couche de carte (par exemple, OpenStreetMap)\n        //   L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n        //     attribution: '© OpenStreetMap contributors',\n        //   }).addTo(map);\n      \n        //   // Récupérer la position actuelle de l'utilisateur\n        //   navigator.geolocation.getCurrentPosition(\n        //     (position) => {\n        //       const { latitude, longitude } = position.coords;\n            \n        //       // Créer un marqueur pour la position actuelle\n        //       const marker = L.marker([latitude, longitude]).addTo(map);\n            \n        //       // Ajouter un popup au marqueur pour afficher des informations supplémentaires\n        //       marker.bindPopup('Votre position actuelle').openPopup();\n            \n        //       // Centrer la carte sur la position de l'utilisateur\n        //       map.setView([latitude, longitude], 13);\n        //     },\n        //     (error) => {\n        //       console.error('Erreur de géolocalisation : ', error.message);\n        //     }\n        //   );\n        // },\n\n        Position(){\n            var mapView = new ol.View({\n                center: ol.proj.fromLonLat([ this.position.latitude,  this.position.longitude]),\n                zoom: 20\n            })\n            var map = new ol.Map({\n                target: 'map',\n                view: mapView\n            })\n            var osmTile = new ol.layer.Tile({\n                title: 'OpenStreetMap',\n                visible: true,\n                source: new ol.source.OSM()\n            })\n            \n            map.addLayer(osmTile);\n            \n            var AmericaStTile = new ol.layer.Tile({\n                title: \"Madagascar\",\n                source: new ol.source.TileWMS({\n                    url: 'http://localhost:8080/geoserver/carte/wms',\n                    params: { 'LAYERS': 'carte:Madagascar', 'TILED': true },\n                    serverType: 'geoserver',\n                    visible: true\n                })\n            })\n            map.addLayer(AmericaStTile)\n\n            var layerSwitcher = new ol.control.LayerSwitcher({\n                activationMode: 'click',\n                startActive: false,\n                groupSelectStyle: 'children'\n            });\n            map.addControl(layerSwitcher);\n        }\n        \n    }\n}\n</script>\n\n<style src=\"../assets/resources/ol/ol.css\"> </style>\n<style src=\"../assets/resources/ol-layerswitcher.css\"> </style>\n<style scoped>\n\n</style>"],"mappings":"AAkBA;AACA;EACAA,KAAA;IACA;MACAC,OAAA;MACAC,KAAA;MACAC,QAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,WAAA,IACA,KAAAF,QAAA;IACA;EACA;EACAG,OAAA;IACAD,YAAA;MACA;MACA,IAAAE,SAAA,CAAAC,WAAA;QACA;QACAD,SAAA,CAAAC,WAAA,CAAAC,kBAAA,CACAN,QAAA;UACA;UACA,KAAAA,QAAA;YACAO,QAAA,EAAAP,QAAA,CAAAQ,MAAA,CAAAD,QAAA;YACAE,SAAA,EAAAT,QAAA,CAAAQ,MAAA,CAAAC;UACA;UACA,KAAAX,OAAA;QACA,GACAC,KAAA;UACA;UACA,KAAAA,KAAA,oCAAAA,KAAA,CAAAW,OAAA;UACA,KAAAZ,OAAA;QACA,CACA;MACA;QACA;QACA,KAAAC,KAAA;QACA,KAAAD,OAAA;MACA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;;IAEA;IACA;;IAEA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEAa,SAAA;MACA,IAAAC,OAAA,OAAAC,EAAA,CAAAC,IAAA;QACAC,MAAA,EAAAF,EAAA,CAAAG,IAAA,CAAAC,UAAA,OAAAjB,QAAA,CAAAO,QAAA,OAAAP,QAAA,CAAAS,SAAA;QACAS,IAAA;MACA;MACA,IAAAC,GAAA,OAAAN,EAAA,CAAAO,GAAA;QACAC,MAAA;QACAC,IAAA,EAAAV;MACA;MACA,IAAAW,OAAA,OAAAV,EAAA,CAAAW,KAAA,CAAAC,IAAA;QACAC,KAAA;QACAC,OAAA;QACAC,MAAA,MAAAf,EAAA,CAAAe,MAAA,CAAAC,GAAA;MACA;MAEAV,GAAA,CAAAW,QAAA,CAAAP,OAAA;MAEA,IAAAQ,aAAA,OAAAlB,EAAA,CAAAW,KAAA,CAAAC,IAAA;QACAC,KAAA;QACAE,MAAA,MAAAf,EAAA,CAAAe,MAAA,CAAAI,OAAA;UACAC,GAAA;UACAC,MAAA;YAAA;YAAA;UAAA;UACAC,UAAA;UACAR,OAAA;QACA;MACA;MACAR,GAAA,CAAAW,QAAA,CAAAC,aAAA;MAEA,IAAAK,aAAA,OAAAvB,EAAA,CAAAwB,OAAA,CAAAC,aAAA;QACAC,cAAA;QACAC,WAAA;QACAC,gBAAA;MACA;MACAtB,GAAA,CAAAuB,UAAA,CAAAN,aAAA;IACA;EAEA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}