{"ast":null,"code":"import sary from '@/assets/images/avatar.png';\nimport { backServer } from '@/config/axiosConfig';\nexport default {\n  data() {\n    return {\n      user: {},\n      avatar: sary,\n      isValid: {\n        username: false,\n        email: false,\n        password: false,\n        confirmPass: false,\n        file: false\n      },\n      isDisable: true,\n      sign: this.$route.path\n    };\n  },\n  methods: {\n    inputHandler(e) {\n      switch (e.target.id) {\n        case 'username':\n          e.target.value.length > 0 ? this.isValid['username'] = true : this.isValid['username'] = false;\n          break;\n        case 'email':\n          /^[a-z0-9._-]+@[a-z0-9._-]+\\.[a-z]{2,6}$/.test(e.target.value) ? this.isValid['email'] = true : this.isValid['email'] = false;\n          break;\n        case 'password':\n          e.target.value.length >= 6 ? this.isValid['password'] = true : this.isValid['password'] = false;\n          break;\n        case 'confirmPassword':\n          e.target.value.length >= 6 && e.target.value == this.user['password'] ? this.isValid['confirmPass'] = true : this.isValid['confirmPass'] = false;\n          break;\n      }\n      if (this.isValid['username'] && this.isValid['email'] && this.isValid['password'] && this.isValid['confirmPass']) {\n        this.isDisable = false;\n      } else {\n        this.isDisable = true;\n      }\n    },\n    fileHandler(e) {\n      let files = e.target.files || e.dataTransfer.files;\n      if (!files.length) return;\n      this.user['image'] = files[0];\n      backServer.post('/register', {\n        image: this.user['image']\n      }).then(res => {\n        console.log(res.data.IMAGE);\n      }).catch(err => {\n        console.log(err);\n      });\n      this.createImg(files[0]);\n    },\n    createImg(file) {\n      let reader = new FileReader();\n      reader.onload = e => {\n        this.avatar = e.target.result;\n      };\n      reader.readAsDataURL(file);\n    },\n    register() {\n      console.log(this.user['image']);\n      backServer.post('/register', {\n        image: this.user['image']\n      }).then(res => {\n        console.log(res.data);\n      }).catch(err => {\n        console.log(err);\n      });\n      this.avatar = sary;\n    }\n  }\n};","map":{"version":3,"names":["sary","backServer","data","user","avatar","isValid","username","email","password","confirmPass","file","isDisable","sign","$route","path","methods","inputHandler","e","target","id","value","length","test","fileHandler","files","dataTransfer","post","image","then","res","console","log","IMAGE","catch","err","createImg","reader","FileReader","onload","result","readAsDataURL","register"],"sources":["src/components/SignUp.vue"],"sourcesContent":["<template>\n  <div class=\"row\">\n      <div class=\"col-lg-3\">\n      <div  class=\"avatar-container d-smart-none bg-light\">\n          <label for=\"formFileLg\">\n            <img :src=\"avatar\" alt=\"Avatar\" class=\"avatar-image\" >\n          </label>\n        <div class=\"avatar-middle\">\n            Photo\n        </div>\n      </div>\n      </div>\n      <div class=\"col-lg-8\">\n      <div class=\"px-lg-5 px-4\">\n        <h2 class=\"mb-4 font-weight-medium\">Create your own account</h2>\n        <div class=\"content\">\n            <form class=\" sign-up\" @submit.prevent=\"register\">\n              <div class=\"form-floating mb-3\">\n                <input type=\"text\" class=\"form-control\" :class=\"isValid['username'] ? 'is-valid' : 'not-valid'\" id=\"username\" placeholder=\"\" autocomplete=\"off\" required v-model=\"user['username']\" @keyup=\"inputHandler\">\n                <label for=\"username\">Username</label>\n              </div>\n             \n                <div class=\"form-floating mb-3\">\n                <input type=\"email\" class=\"form-control\" :class=\"isValid['email'] ? 'is-valid' : 'not-valid'\" id=\"email\" placeholder=\"\" autocomplete=\"off\" required v-model=\"user['email']\" @keyup=\"inputHandler\" >\n                <label for=\"email\">Email address</label>\n              </div>\n              <div class=\"form-floating mb-3\">\n                <input type=\"password\" class=\"form-control\" :class=\"isValid['password'] ? 'is-valid' : 'not-valid'\" id=\"password\" placeholder=\"\" autocomplete=\"off\" required v-model=\"user['password']\" @keyup=\"inputHandler\">\n                <label for=\"password\">Password</label>\n              </div>\n              <div class=\"form-floating mb-3\">\n                <input type=\"password\" class=\"form-control\" :class=\"isValid['confirmPass'] ? 'is-valid' : 'not-valid'\" id=\"confirmPassword\" placeholder=\"\" autocomplete=\"off\" required v-model=\"user['confirmPassword']\" @keyup=\"inputHandler\">\n                <label for=\"confirmPassword\">Confirm password</label>\n              </div>\n              <div class=\"mb-5 d-lg-none\">\n                <label for=\"formFileLg\" class=\"form-label\">Photo</label>\n                <input class=\"form-control form-control-lg\" id=\"formFileLg\" @change=\"fileHandler\" type=\"file\" >\n              </div>\n              <div class=\"d-flex align-items-center justify-content-end\">\n                <router-link to=\"/Sign/In\"><span class=\"mx-2 mx-sm-3 has-acc\">Have an account ?</span></router-link>\n                <button type=\"submit\" class=\"btn btn-primary\" :disabled=\"isDisable\">Create Account</button>\n              </div>\n            </form>\n        </div>\n      </div>\n      </div>\n    </div>\n</template>\n<script>\n  import sary from '@/assets/images/avatar.png'\n  import { backServer } from '@/config/axiosConfig'\n\n  export default{\n    data() {\n      return {\n          user:{},\n          avatar : sary,\n          isValid:{username: false, email: false, password: false, confirmPass: false, file: false},\n          isDisable: true,\n          sign: this.$route.path,\n      }\n    },\n    methods: {\n      inputHandler(e){\n        switch (e.target.id) {\n          case 'username':\n              e.target.value.length >0 ? this.isValid['username'] = true : this.isValid['username'] = false\n            break;\n          case 'email':\n              /^[a-z0-9._-]+@[a-z0-9._-]+\\.[a-z]{2,6}$/.test(e.target.value) ? this.isValid['email'] = true : this.isValid['email'] = false\n            break;\n          case 'password':\n              e.target.value.length >=6 ? this.isValid['password'] = true : this.isValid['password'] = false\n            break;\n          case 'confirmPassword':\n              (e.target.value.length >=6 && e.target.value == this.user['password']) ? this.isValid['confirmPass'] = true : this.isValid['confirmPass'] = false\n            break;\n        }\n        \n        if(this.isValid['username'] && this.isValid['email'] && this.isValid['password'] && this.isValid['confirmPass'])\n        {\n          this.isDisable = false\n        }else{\n          this.isDisable = true\n        }\n        \n      },\n      fileHandler(e){\n        let files = e.target.files || e.dataTransfer.files\n        if(!files.length) return;\n        this.user['image'] = files[0]\n\nbackServer.post('/register',{image: this.user['image']})\n          .then(res => {\n              console.log(res.data.IMAGE)\n          }).catch(err => {\n              console.log(err);\n          })\n\n        this.createImg(files[0])\n      },\n      createImg(file){\n        let reader = new FileReader();\n        reader.onload = (e) => {\n          this.avatar = e.target.result\n        }\n        reader.readAsDataURL(file)\n      },\n      register(){\n        console.log(this.user['image'])\n        backServer.post('/register',{image: this.user['image']})\n          .then(res => {\n              console.log(res.data)\n          }).catch(err => {\n              console.log(err);\n          })\n          this.avatar = sary\n      }\n    }\n  }\n</script>\n"],"mappings":"AAiDA,OAAAA,IAAA;AACA,SAAAC,UAAA;AAEA;EACAC,KAAA;IACA;MACAC,IAAA;MACAC,MAAA,EAAAJ,IAAA;MACAK,OAAA;QAAAC,QAAA;QAAAC,KAAA;QAAAC,QAAA;QAAAC,WAAA;QAAAC,IAAA;MAAA;MACAC,SAAA;MACAC,IAAA,OAAAC,MAAA,CAAAC;IACA;EACA;EACAC,OAAA;IACAC,aAAAC,CAAA;MACA,QAAAA,CAAA,CAAAC,MAAA,CAAAC,EAAA;QACA;UACAF,CAAA,CAAAC,MAAA,CAAAE,KAAA,CAAAC,MAAA,YAAAhB,OAAA,2BAAAA,OAAA;UACA;QACA;UACA,0CAAAiB,IAAA,CAAAL,CAAA,CAAAC,MAAA,CAAAE,KAAA,SAAAf,OAAA,wBAAAA,OAAA;UACA;QACA;UACAY,CAAA,CAAAC,MAAA,CAAAE,KAAA,CAAAC,MAAA,aAAAhB,OAAA,2BAAAA,OAAA;UACA;QACA;UACAY,CAAA,CAAAC,MAAA,CAAAE,KAAA,CAAAC,MAAA,SAAAJ,CAAA,CAAAC,MAAA,CAAAE,KAAA,SAAAjB,IAAA,oBAAAE,OAAA,8BAAAA,OAAA;UACA;MACA;MAEA,SAAAA,OAAA,qBAAAA,OAAA,kBAAAA,OAAA,qBAAAA,OAAA,iBACA;QACA,KAAAM,SAAA;MACA;QACA,KAAAA,SAAA;MACA;IAEA;IACAY,YAAAN,CAAA;MACA,IAAAO,KAAA,GAAAP,CAAA,CAAAC,MAAA,CAAAM,KAAA,IAAAP,CAAA,CAAAQ,YAAA,CAAAD,KAAA;MACA,KAAAA,KAAA,CAAAH,MAAA;MACA,KAAAlB,IAAA,YAAAqB,KAAA;MAEAvB,UAAA,CAAAyB,IAAA;QAAAC,KAAA,OAAAxB,IAAA;MAAA,GACAyB,IAAA,CAAAC,GAAA;QACAC,OAAA,CAAAC,GAAA,CAAAF,GAAA,CAAA3B,IAAA,CAAA8B,KAAA;MACA,GAAAC,KAAA,CAAAC,GAAA;QACAJ,OAAA,CAAAC,GAAA,CAAAG,GAAA;MACA;MAEA,KAAAC,SAAA,CAAAX,KAAA;IACA;IACAW,UAAAzB,IAAA;MACA,IAAA0B,MAAA,OAAAC,UAAA;MACAD,MAAA,CAAAE,MAAA,GAAArB,CAAA;QACA,KAAAb,MAAA,GAAAa,CAAA,CAAAC,MAAA,CAAAqB,MAAA;MACA;MACAH,MAAA,CAAAI,aAAA,CAAA9B,IAAA;IACA;IACA+B,SAAA;MACAX,OAAA,CAAAC,GAAA,MAAA5B,IAAA;MACAF,UAAA,CAAAyB,IAAA;QAAAC,KAAA,OAAAxB,IAAA;MAAA,GACAyB,IAAA,CAAAC,GAAA;QACAC,OAAA,CAAAC,GAAA,CAAAF,GAAA,CAAA3B,IAAA;MACA,GAAA+B,KAAA,CAAAC,GAAA;QACAJ,OAAA,CAAAC,GAAA,CAAAG,GAAA;MACA;MACA,KAAA9B,MAAA,GAAAJ,IAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}