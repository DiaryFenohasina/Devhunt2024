{"ast":null,"code":"import { backServer } from \"@/config/axiosConfig\";\nimport { io } from \"socket.io-client\";\nimport sary from '@/assets/images/avatar.png';\nimport { bot, chat, mentor } from '@/assets/images/index';\nexport default {\n  data() {\n    return {\n      bot,\n      chat,\n      mentor,\n      picture: sary,\n      index: -1,\n      id: 1,\n      username: 'Rotsy',\n      //   id: parseInt(localStorage.getItem(\"id\")),\n      //   username: localStorage.getItem(\"username\"),\n      panel: 'ChatBot',\n      user: {},\n      room: [],\n      users: [\n        // {\n        //     id: 0,\n        //     username: 'RAMANANTSOA Rotsiniaina'\n        // },\n        // {\n        //     id: 1,\n        //     username: 'RATSIMBAZAFY Tojoniaina Mbola Safidy'\n        // }\n      ],\n      connectedUsers: [],\n      newMessage: null,\n      messages: [\n        // {\n        //     UserId: 1,\n        //     msg : 'hello'\n        // },\n        // {\n        //     UserId: 0,\n        //     msg : 'hello'\n        // }\n      ],\n      messagesChat: [],\n      socket: null\n    };\n  },\n  created() {\n    let text = \"**Cava** **Definition:** Cava is a Spanish sparkling wine made in the traditional method, similar to Champagne. It is characterized by its pale yellow color, fine bubbles, and aromas of ripe fruit, citrus, and floral notes. **Origin and History:** Cava originated in Catalonia, Spain, in the 19th century. Inspired by the success of Champagne, local winemakers began experimenting with traditional methods to produce sparkling wine from native grape varieties. The name 'cava' is derived from the Catalan word for 'cellar,' where the wine is aged. **Production:** Cava is made using the traditional method, which involves a double fermentation process. The first fermentation takes place in stainless steel tanks, where yeast converts sugar into alcohol and carbon dioxide. The wine is then bottled and a second fermentation occurs, in which the carbon dioxide produced creates the bubbles. The wine is aged on the yeast lees for a minimum of nine months, which adds complexity and flavor. **Grape Varieties:** Cava is traditionally made from three main grape varieties: * **Macabeo:** Provides acidity and freshness * **Xarel-lo:** Adds body and structure * **Parellada:** Contributes to elegance and finesse Other permitted varieties include Chardonnay, Pinot Noir, and Garnacha. **Styles and Classifications:** Cava is classified according to its sweetness level: * **Brut Nature:** No added sugar * **Extra Brut:** Up to 6 grams of sugar per liter * **Brut:** Up to 12 grams of sugar per liter * **Extra Seco:** Up to 17 grams of sugar per liter * **Seco:** Up to 32 grams of sugar per liter * **Semiseco:** Up to 50 grams of sugar per liter * **Dulce:** Over 50 grams of sugar per liter **Aging:** Cava is aged for varying periods of time to develop its complexity and flavors: * **Roja:** Aged for 9 months to 15 months * **Reserva:** Aged for 15 months to 30 months * **Gran Reserva:** Aged for over 30 months **Flavor Profile:** Cava typically exhibits flavors of ripe fruit (apple, pear, peach), citrus (lemon, grapefruit), and floral notes (honeysuckle, jasmine). It has a fresh acidity, fine bubbles, and a creamy texture. **Food Pairing:** Cava is a versatile wine that pairs well with a variety of dishes, including: * Seafood (oysters, sushi, lobster) * Cheeses (Parmesan, Brie, Manchego) * Fried foods (tempura, calamari) * Caviar * Salty snacks (popcorn, crackers) **Serving Temperature:** Cava is best served chilled, between 45-50Â°F (7-10Â°C).\";\n    let newText = text.replace(/\\*\\*/g, '');\n    console.log(newText);\n    this.socketConnect();\n    this.getUsers();\n  },\n  updated() {},\n  beforeDestroy() {\n    this.disconnect();\n  },\n  methods: {\n    isOnline(index) {\n      // console.log(index)\n      // console.log(this.connectedUsers)\n      const online = this.connectedUsers.find(user => user.UserId === index);\n      if (online) return true;\n      return false;\n    },\n    selectPanel(x) {\n      this.panel = x;\n      if (x == 'ChatBot') {\n        this.messagesChat = [];\n        this.joinRoom();\n      }\n    },\n    getUsers() {\n      backServer.get(`/getUsers/${this.id}`).then(res => {\n        this.users = [...res.data.user];\n      }).catch(err => {\n        console.log(err);\n      });\n    },\n    selectUser(ind) {\n      this.user = this.users.find(user => user.id === ind);\n      this.index = ind;\n      this.joinRoom(ind);\n      this.setRoom(ind);\n      this.getMessages();\n    },\n    socketConnect() {\n      //   socket : io.connect(\"http://192.168.43.19:4001\")\n\n      this.socket = io(\"http://127.0.0.1:5000\");\n      this.socket.emit('status', {\n        username: this.username,\n        UserId: this.id\n      });\n      this.socket.on('connectedUser', user => {\n        this.connectedUsers = [...this.connectedUsers, ...user];\n      });\n    },\n    joinRoom(anotherID) {\n      if (this.panel == 'ChatBot') {\n        this.socket.emit('join', 'bot');\n      } else {\n        this.socket.emit('join', `${this.id}--with--${anotherID}`);\n      }\n      //   this.socket.emit('join', `${this.id}--with--${anotherID}`)\n    },\n    getMessages() {\n      this.messages = [];\n      backServer.get(`/getMessage/${this.room}`).then(res => {\n        this.messages = [...res.data.msg];\n      });\n      this.socket.on('receiveMessage', message => {\n        this.messages = [...this.messages, message];\n      });\n    },\n    sendMessage() {\n      if (!this.newMessage) return;\n      if (this.panel === 'ChatBot') {\n        let msg = {\n          msg: this.newMessage,\n          type: 'user'\n        };\n        this.messagesChat = [...this.messagesChat, msg];\n        backServer.post('/chat', {\n          message: this.newMessage\n        }).then(async res => {\n          //   if(res.data.message == 'message stored'){\n          const message = await res.data.msg;\n          // console.log(res.data.msg)\n          this.socket.emit('sendMessage', message);\n          // console.log(res.data.message)\n          this.messagesChat = [...this.messagesChat, message];\n          // console.log(this.messages)\n          //   }\n        }).catch(err => {\n          console.log(err);\n        });\n        this.newMessage = '';\n      } else {\n        let msg = {\n          UserId: this.id,\n          msg: this.newMessage,\n          room: this.room\n        };\n        backServer.post('/sendMessage', msg).then(res => {\n          if (res.data.message == 'message stored') {\n            // console.log(res.data.msg);\n            this.socket.emit('sendMessage', res.data.msg);\n            this.messages = [...this.messages, res.data.msg];\n            // console.log(this.messages)\n          }\n        }).catch(err => {\n          console.log(err);\n        });\n        this.newMessage = '';\n      }\n    },\n    setRoom(id) {\n      let data = new Array(this.id, id);\n      let unique = [...new Set(data)].sort((a, b) => a < b ? -1 : 1);\n      this.room = `${unique[0]}--with--${unique[1]}`;\n    },\n    disconnect() {\n      this.socket.emit('leave', this.id);\n      this.socket.disconnect();\n    }\n  }\n};","map":{"version":3,"names":["backServer","io","sary","bot","chat","mentor","data","picture","index","id","username","panel","user","room","users","connectedUsers","newMessage","messages","messagesChat","socket","created","text","newText","replace","console","log","socketConnect","getUsers","updated","beforeDestroy","disconnect","methods","isOnline","online","find","UserId","selectPanel","x","joinRoom","get","then","res","catch","err","selectUser","ind","setRoom","getMessages","emit","on","anotherID","msg","message","sendMessage","type","post","Array","unique","Set","sort","a","b"],"sources":["src/views/Discussion.vue"],"sourcesContent":["<template>\n  <section class=\"pt-5\">\n    <div class=\"container shadow section-sm rounded min-Height\">\n      <div class=\"row\">\n        <div class=\"sideChat col-lg-1\">\n            <ul>\n                <li class=\" sidelist c-type\" @click=\"selectPanel('ChatBot')\" style=\"width=55px; height:55px\">\n                    <img :src=\"bot\" class=\"mb-4 p-2\" :class=\"panel === 'ChatBot'? 'card-icon-Tools-active' : 'card-icon-Tools'\" alt=\"\">\n                </li>\n                <li class=\" sidelist c-type my-2\"  @click=\"selectPanel('Personne')\" style=\"width=55px; height:55px\">\n                    <img :src=\"chat\" class=\"mb-4 p-2\" :class=\"panel === 'Personne'? 'card-icon-Tools-active' : 'card-icon-Tools' \" >\n                </li>\n                <li class=\" sidelist c-type\" @click=\"selectPanel('Mentor')\" style=\"width=55px; height:55px\">\n                    <img :src=\"mentor\" class=\"mb-4 p-2\" :class=\"panel === 'Mentor'? 'card-icon-Tools-active' : 'card-icon-Tools'\">\n                </li>\n            </ul>\n        </div>\n        <div class=\"col-lg-4 px-4\">\n            <h3 class=\"mb-5\">{{panel}}</h3>\n            <div v-if=\"panel !=='ChatBot' \">\n                <div class=\"d-flex search-div mb-4 shadow-input \">\n                <input type=\"text\" class=\"ps-3 flex-grow-1 search-input me-auto text-left\">\n                <button type=\"submit\" class=\"search-btn pe-3\"><i class=\"ti-search h5\"></i></button>\n            </div>\n          <ul class=\"p-2\" :class=\"index == user.id ? 'rounded-user-msg-active' : 'rounded-user-msg'\" v-for=\"user in users\" :key=\"user.id\">\n            <div class=\"d-flex align-items-center c-type user-msg\" @click=\"selectUser(user.id)\">\n                <div><img :src=\"picture\" alt=\"Avatar\" class=\" rounded-circle avatar-msg\" ></div>\n                <div class=\"mx-3 flex-grow-1 text-left\">\n                    <li class=\"user-msg\" >{{user.username}}</li>\n                    <li class=\"me-auto text-light\">Message</li>\n                </div>\n                <div v-if=\"isOnline(user.id)\" class=\"online\"></div>\n            </div>\n          </ul>\n            </div>\n        </div>\n        <div class=\"col-lg-7 align-items-center\">\n          <div class=\"me-5 message\">\n\n               <!-- USER TO CHAT -->\n              <!--  -->\n                <div v-if=\"user.username ? user.username : true \">\n                  <div v-if=\"panel === 'ChatBot'\" class=\"rounded-5 d-flex align-items-center shadow p-2 mb-4 \" style=\"height:50px\">\n                    <div ><img :src=\"bot\" alt=\"Avatar\" class=\" rounded-circle avatar-msg-clicked\" ></div><strong class=\"ms-3 d-flex \">Assistance IA</strong>  \n                  </div>\n                  <div v-else class=\"rounded-5 d-flex align-items-center shadow p-2 mb-4 \" style=\"height:50px\">\n                    <div ><img :src=\"picture\" alt=\"Avatar\" class=\" rounded-circle avatar-msg-clicked\" ></div><strong class=\"ms-3 d-flex \">{{user.username}}</strong>  \n                  </div>\n\n                  <!-- CHAT MESSAGE -->\n                  <div class=\" rounded-5 mb-3 bg-light \">\n                    <ul v-if=\"panel === 'ChatBot'\" class=\"px-3 card-message  list-group rounded-5 \" v-chat-scroll=\"{always: false, smooth: true}\">\n                      \n                      <li v-for=\"(message,i) in messagesChat\" :key=\"i\" :class=\"{'mt-4' : index == 0}\" >\n                        <p class=\" message-font shadow\" :class=\"[ message.type !== 'bot' ? 'float-end chat-l' : 'chat-r'  ]\">\n                          {{ message.msg }}\n                          <!-- <small>:{{ message.id}}</small>  -->\n                          \n                        </p>\n                      </li>\n                    </ul>\n                    <ul v-else class=\"px-3 card-message  list-group rounded-5 \" v-chat-scroll=\"{always: false, smooth: true}\">\n                      \n                      <li v-for=\"(message, index) in messages\" :key=\"index\" :class=\"{'mt-4' : index == 0}\" >\n                        <p class=\" message-font shadow\" :class=\"[ message.UserId == id ? 'float-end chat-l' : 'chat-r'  ]\">\n                          {{ message.msg }}\n                          <!-- <small>:{{ message.id}}</small>  -->\n                          \n                        </p>\n                      </li>\n                    </ul>\n                    <div class=\"search-wrapper align-items-center d-sm-flex \" style=\"background:#fff;\">\n                        <input id=\"search-by\" name=\"s\" type=\"text\" class=\"form-control form-control-sm\" placeholder=\"Your message here\" style=\"width:100%; background:transparent\" v-model=\"newMessage\" @keypress.enter=\"sendMessage\">\n                        <input type=\"submit\" class=\"btn btn-primary btn-sm\" value=\"Send\" @click=\"sendMessage\">\n                    </div>\n                  </div>\n                </div>\n\n                <!--  -->\n              <div v-else class=\"text-center\">\n                <p  class=\"message\" >Choose an user to chat</p>\n              </div>\n             \n            </div>\n        </div>\n      </div>\n    </div>\n  </section>\n</template>\n<script>\nimport { backServer } from \"@/config/axiosConfig\";\nimport { io }  from \"socket.io-client\"\nimport sary from '@/assets/images/avatar.png'\nimport {bot,chat, mentor} from '@/assets/images/index'\n\nexport default {\n  data() {\n    return {\n        bot,chat,mentor,\n        picture: sary,\n      index: -1,\n      id : 1,\n      username : 'Rotsy',\n    //   id: parseInt(localStorage.getItem(\"id\")),\n    //   username: localStorage.getItem(\"username\"),\n      panel:'ChatBot',\n      user:{},\n      room : [],\n      users: [\n        // {\n        //     id: 0,\n        //     username: 'RAMANANTSOA Rotsiniaina'\n        // },\n        // {\n        //     id: 1,\n        //     username: 'RATSIMBAZAFY Tojoniaina Mbola Safidy'\n        // }\n\n        ],\n      connectedUsers: [],\n      newMessage: null,\n      messages: [\n        // {\n        //     UserId: 1,\n        //     msg : 'hello'\n        // },\n        // {\n        //     UserId: 0,\n        //     msg : 'hello'\n        // }\n      ],\n      messagesChat:[],\n      socket: null\n      \n    };\n  },\n  created() {\n    let text = \"**Cava** **Definition:** Cava is a Spanish sparkling wine made in the traditional method, similar to Champagne. It is characterized by its pale yellow color, fine bubbles, and aromas of ripe fruit, citrus, and floral notes. **Origin and History:** Cava originated in Catalonia, Spain, in the 19th century. Inspired by the success of Champagne, local winemakers began experimenting with traditional methods to produce sparkling wine from native grape varieties. The name 'cava' is derived from the Catalan word for 'cellar,' where the wine is aged. **Production:** Cava is made using the traditional method, which involves a double fermentation process. The first fermentation takes place in stainless steel tanks, where yeast converts sugar into alcohol and carbon dioxide. The wine is then bottled and a second fermentation occurs, in which the carbon dioxide produced creates the bubbles. The wine is aged on the yeast lees for a minimum of nine months, which adds complexity and flavor. **Grape Varieties:** Cava is traditionally made from three main grape varieties: * **Macabeo:** Provides acidity and freshness * **Xarel-lo:** Adds body and structure * **Parellada:** Contributes to elegance and finesse Other permitted varieties include Chardonnay, Pinot Noir, and Garnacha. **Styles and Classifications:** Cava is classified according to its sweetness level: * **Brut Nature:** No added sugar * **Extra Brut:** Up to 6 grams of sugar per liter * **Brut:** Up to 12 grams of sugar per liter * **Extra Seco:** Up to 17 grams of sugar per liter * **Seco:** Up to 32 grams of sugar per liter * **Semiseco:** Up to 50 grams of sugar per liter * **Dulce:** Over 50 grams of sugar per liter **Aging:** Cava is aged for varying periods of time to develop its complexity and flavors: * **Roja:** Aged for 9 months to 15 months * **Reserva:** Aged for 15 months to 30 months * **Gran Reserva:** Aged for over 30 months **Flavor Profile:** Cava typically exhibits flavors of ripe fruit (apple, pear, peach), citrus (lemon, grapefruit), and floral notes (honeysuckle, jasmine). It has a fresh acidity, fine bubbles, and a creamy texture. **Food Pairing:** Cava is a versatile wine that pairs well with a variety of dishes, including: * Seafood (oysters, sushi, lobster) * Cheeses (Parmesan, Brie, Manchego) * Fried foods (tempura, calamari) * Caviar * Salty snacks (popcorn, crackers) **Serving Temperature:** Cava is best served chilled, between 45-50Â°F (7-10Â°C).\";\n\nlet newText = text.replace(/\\*\\*/g, '');\n\nconsole.log(newText);\n    this.socketConnect()\n    this.getUsers()\n  },\n  updated(){\n  },  \n  beforeDestroy()\n  {\n      this.disconnect()\n  },\n  methods: {\n    isOnline(index)\n    {\n      // console.log(index)\n      // console.log(this.connectedUsers)\n      const online = this.connectedUsers.find((user) => user.UserId === index)\n      if(online) return true\n\n      return false\n    },\n    selectPanel(x)\n    {\n        this.panel = x\n        if(x == 'ChatBot')\n        {\n            this.messagesChat = []\n            this.joinRoom()\n        }\n    },\n    getUsers() {\n      backServer\n        .get(`/getUsers/${this.id}`)\n        .then( (res) => {\n           this.users =  [...res.data.user];\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    },\n    selectUser(ind) {\n      this.user = this.users.find((user) => user.id === ind )\n      this.index = ind;\n      this.joinRoom(ind)\n      this.setRoom(ind)\n      this.getMessages()\n      \n    },\n    socketConnect(){\n      \n    //   socket : io.connect(\"http://192.168.43.19:4001\")\n\n      this.socket = io(\"http://127.0.0.1:5000\")\n      this.socket.emit('status',{username: this.username, UserId:this.id})\n      this.socket.on('connectedUser', (user) => {\n        this.connectedUsers = [...this.connectedUsers, ...user]\n      })\n    },\n    joinRoom(anotherID){\n      if(this.panel == 'ChatBot')\n      {\n        this.socket.emit('join', 'bot')\n      }\n      else{\n        this.socket.emit('join', `${this.id}--with--${anotherID}`)\n      }\n    //   this.socket.emit('join', `${this.id}--with--${anotherID}`)\n    },\n    getMessages(){\n      this.messages = []\n      \n      backServer.get(`/getMessage/${this.room}`)\n      .then(res => {\n        this.messages = [...res.data.msg];\n\n      })\n\n      this.socket.on('receiveMessage',(message) => {\n        this.messages = [...this.messages, message]\n      })\n    },\n    sendMessage()\n    {\n      if(!this.newMessage) return\n\n      if(this.panel === 'ChatBot')\n      {\n        let msg = { msg: this.newMessage, type: 'user'}\n        this.messagesChat = [...this.messagesChat, msg]\n        backServer.post('/chat',{message: this.newMessage})\n        .then(async res => {\n        //   if(res.data.message == 'message stored'){\n            const message = await res.data.msg\n            // console.log(res.data.msg)\n            this.socket.emit('sendMessage', message)\n            // console.log(res.data.message)\n            this.messagesChat = [...this.messagesChat, message]\n            // console.log(this.messages)\n        //   }\n        })\n        .catch(err => {\n          console.log(err)\n        })\n        \n        this.newMessage = ''\n      }\n      else{\n        let msg = {UserId : this.id, msg: this.newMessage, room: this.room}\n        backServer.post('/sendMessage',msg)\n        .then(res => {\n          if(res.data.message == 'message stored'){\n            // console.log(res.data.msg);\n            this.socket.emit('sendMessage', res.data.msg)\n            this.messages = [...this.messages, res.data.msg]\n            // console.log(this.messages)\n          }\n        })\n        .catch(err => {\n          console.log(err)\n        })\n      this.newMessage = ''\n      }\n\n    },\n    setRoom(id)\n    {\n      let data = new Array(this.id,id)\n      let unique = [...new Set(data)].sort((a, b) => (a < b ? -1 : 1));\n\n      this.room = `${unique[0]}--with--${unique[1]}`\n    },\n    disconnect()\n    {\n      this.socket.emit('leave', this.id)\n      this.socket.disconnect()\n    },\n  },\n  \n};\n</script>\n<style scoped>\n    .rounded-5{\n        border-radius: 5px !important;\n    }\n    .message{\n        position: relative;\n        top: 50%;\n        left: 50%;\n        transform: translate(-50%, -50%);\n        font-size: 16px;\n    }\n    .message-font{\n        font-size: 13px;\n    }\n    .min-Height{\n\n        min-height: 800px;\n        max-height: 800px;\n    }\n    .message-panel{\n        min-height: 700px;\n        max-height: 700px;\n    }\n    .card-message{\n        min-height: 560px;\n        max-height: 560px;\n        overflow-y: scroll;\n        \n    }\n    .chat-r{\n        \n        border-top-right-radius: 15px;\n        border-bottom-left-radius: 15px;\n        border-bottom-right-radius: 15px;\n        background: #cacaca;\n        padding-top: 5px;\n        padding-bottom: 5px;\n        padding-left: 10px;\n        padding-right: 10px;\n        max-width: 300px;\n        \n    }\n    .chat-l{\n        \n        border-top-left-radius: 15px;\n        border-bottom-left-radius: 15px;\n        border-bottom-right-radius: 15px;\n        background: #ffffff;\n        padding-top: 5px;\n        padding-bottom: 5px;\n        padding-left: 10px;\n        padding-right: 10px;\n        max-width: 300px;\n        \n    }\n    .online{\n        width: 8px;\n        height: 8px;\n        border-radius:50px;\n        background-color: rgb(3, 173, 26);\n    }\n    .sideChat{\n        border-right:1px solid #E2E2E2;\n    }\n    .active{\n        color: var(--baseColor);\n    }\n    .card-icon-Tools-active {\n\n        background: var(--baseColor);\n        color: #fff;\n        height: 55px;\n        width: 60px;\n        line-height: 55px;\n        text-align: center;\n        font-size: 27px;\n        display: block;\n        border-radius: 12px !important;\n    }\n    .card-icon-Tools:hover {\n        background: var(--baseColor);\n        color: #fff;\n        height: 55px;\n        width: 60px;\n        line-height: 55px;\n        text-align: center;\n        font-size: 27px;\n        display: block;\n        border-radius: 12px !important;\n    }\n    .card-icon-Tools {\n        /* backgrounrgb(148, 148, 148)2E2; */\n        color: #5c5c5c;\n        height: 55px;\n        width: 60px;\n        line-height: 55px;\n        text-align: center;\n        font-size: 27px;\n        display: block;\n        border-radius: 12px !important;\n    }\n    .search-div{\n        /* border: 1px solid #5c5c5c; */\n        \n        height: 45px;\n        border-radius: 25px;\n        background: #ffffff;\n    }\n    .search-input{\n        background: transparent;\n        border: 0;\n    }\n    .search-input:focus{\n        outline: 0;\n    }\n    .search-btn{\n        background: transparent;\n        border: 0;\n    }\n    .shadow-input{\n        box-shadow: 10px 9px 60px rgba(62, 62, 62, 0.102) !important;\n    }\n    .avatar-msg{\n        max-width: 50px;\n        min-width: 50px;\n    }\n    .avatar-msg-clicked{\n        max-width: 40px;\n        min-width: 40px;\n    }\n    .user-message{\n        position: relative;\n        margin-left: 1cm;\n    }\n    .rounded-user-msg-active{\n        background: #1cdd4c69;\n        color: #000;\n        border-radius: 12px !important;\n    }\n    .rounded-user-msg:hover{\n        background: #1cdd4c69;\n        border-radius: 12px !important;\n    }\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}