{"ast":null,"code":"import ol from '../assets/resources/ol/ol.js';\nexport default {\n  data() {\n    return {\n      loading: true,\n      error: null,\n      position: null\n    };\n  },\n  mounted() {\n    // this.getPosition(),\n    this.show();\n  },\n  methods: {\n    getPosition() {\n      // Vérifier si le navigateur prend en charge la géolocalisation\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(position => {\n          this.position = {\n            latitude: position.coords.latitude,\n            longitude: position.coords.longitude\n          };\n          this.loading = false;\n        }, error => {\n          this.error = \"Erreur de géolocalisation : \" + error.message;\n          this.loading = false;\n        });\n      } else {\n        this.error = \"La géolocalisation n'est pas prise en charge par ce navigateur.\";\n        this.loading = false;\n      }\n    },\n    show() {\n      var mapView = new ol.View({\n        center: ol.proj.fromLonLat([47.0833, -21.4551]),\n        zoom: 20\n      });\n      var map = new ol.Map({\n        target: 'map',\n        view: mapView\n      });\n      var osmTile = new ol.layer.Tile({\n        title: 'OpenStreetMap',\n        visible: true,\n        source: new ol.source.OSM()\n      });\n      map.addLayer(osmTile);\n    }\n  }\n};","map":{"version":3,"names":["ol","data","loading","error","position","mounted","show","methods","getPosition","navigator","geolocation","getCurrentPosition","latitude","coords","longitude","message","mapView","View","center","proj","fromLonLat","zoom","map","Map","target","view","osmTile","layer","Tile","title","visible","source","OSM","addLayer"],"sources":["src/views/MappingView.vue"],"sourcesContent":["<template>\n    <div class=\"section pb-0\">\n        <div class=\"container\">\n            <div class=\"text\">\n                <p class=\"card-title h8\">Découvrez le monde à portée de clic avec Google Maps !</p>\n            </div>\n            <div class=\"image d-flex col-md-12 col-xs-12 col-sm-12 col-xl-12\">\n                <div id=\"map\"></div>\n            </div>\n        </div>\n        <!-- <h1>Position Géographique Actuelle</h1>\n        <p v-if=\"loading\">Récupération de la position en cours...</p>\n        <p v-if=\"error\">{{ error }}</p>\n        <p v-if=\"position\">\n            Latitude: {{ position.latitude }}<br>\n            Longitude: {{ position.longitude }}\n        </p> -->\n    </div>\n</template>\n\n<script src=\"https://cdn.jsdelivr.net/npm/vue@2\"></script>\n<script src=\"../assets/resources/ol/ol.js\"></script>\n<script src=\"../assets/resources/ol-layerswitcher.js\"></script>\n\n<script>\nimport ol from '../assets/resources/ol/ol.js';\nexport default{\n    data(){\n        return {\n            loading: true,\n            error: null,\n            position: null\n        }\n    },\n    mounted(){\n        // this.getPosition(),\n        this.show()\n    },\n    methods : {\n        getPosition(){\n            // Vérifier si le navigateur prend en charge la géolocalisation\n            if (navigator.geolocation) {\n                navigator.geolocation.getCurrentPosition(\n                    (position) => {\n                        this.position = {\n                            latitude: position.coords.latitude,\n                            longitude: position.coords.longitude\n                        };\n                        this.loading = false;\n                    },\n                    (error) => {\n                        this.error = \"Erreur de géolocalisation : \" + error.message;\n                        this.loading = false;\n                    }\n                );\n            } else {\n                this.error = \"La géolocalisation n'est pas prise en charge par ce navigateur.\";\n                this.loading = false;\n            }\n        },\n        show(){\n            var mapView = new ol.View({\n                center: ol.proj.fromLonLat([ 47.0833,  -21.4551]),\n                zoom: 20\n            });\n\n            var map = new ol.Map({\n                target: 'map',\n                view: mapView\n            });\n\n            var osmTile = new ol.layer.Tile({\n                title: 'OpenStreetMap',\n                visible: true,\n                source: new ol.source.OSM()\n            });\n\n            map.addLayer(osmTile);\n        }\n    }\n}\n</script>\n\n<style src=\"../assets/resources/ol/ol.css\"> </style>\n<style src=\"../assets/resources/ol-layerswitcher.css\"> </style>\n<style scoped>\n    #map {\n        width: 100vw;\n        height: 100vh;\n    }\n</style>"],"mappings":"AAyBA,OAAAA,EAAA;AACA;EACAC,KAAA;IACA;MACAC,OAAA;MACAC,KAAA;MACAC,QAAA;IACA;EACA;EACAC,QAAA;IACA;IACA,KAAAC,IAAA;EACA;EACAC,OAAA;IACAC,YAAA;MACA;MACA,IAAAC,SAAA,CAAAC,WAAA;QACAD,SAAA,CAAAC,WAAA,CAAAC,kBAAA,CACAP,QAAA;UACA,KAAAA,QAAA;YACAQ,QAAA,EAAAR,QAAA,CAAAS,MAAA,CAAAD,QAAA;YACAE,SAAA,EAAAV,QAAA,CAAAS,MAAA,CAAAC;UACA;UACA,KAAAZ,OAAA;QACA,GACAC,KAAA;UACA,KAAAA,KAAA,oCAAAA,KAAA,CAAAY,OAAA;UACA,KAAAb,OAAA;QACA,CACA;MACA;QACA,KAAAC,KAAA;QACA,KAAAD,OAAA;MACA;IACA;IACAI,KAAA;MACA,IAAAU,OAAA,OAAAhB,EAAA,CAAAiB,IAAA;QACAC,MAAA,EAAAlB,EAAA,CAAAmB,IAAA,CAAAC,UAAA;QACAC,IAAA;MACA;MAEA,IAAAC,GAAA,OAAAtB,EAAA,CAAAuB,GAAA;QACAC,MAAA;QACAC,IAAA,EAAAT;MACA;MAEA,IAAAU,OAAA,OAAA1B,EAAA,CAAA2B,KAAA,CAAAC,IAAA;QACAC,KAAA;QACAC,OAAA;QACAC,MAAA,MAAA/B,EAAA,CAAA+B,MAAA,CAAAC,GAAA;MACA;MAEAV,GAAA,CAAAW,QAAA,CAAAP,OAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}